from flask import Flask, jsonify, render_template, request
import psycopg2
import os

app = Flask(__name__, static_url_path='/static')

DATABASE_URL = os.environ.get("DATABASE_URL")

def get_connection():
    return psycopg2.connect(DATABASE_URL)

@app.route('/')
def index():
    return render_template("index.html")

# üîπ GET warehouses
@app.route('/warehouses', methods=['GET'])
def get_warehouses():
    try:
        conn = get_connection()
        cur = conn.cursor()
        cur.execute("SELECT id, name FROM warehouses")
        rows = cur.fetchall()
        conn.close()
        return jsonify([{"id": row[0], "name": row[1]} for row in rows])
    except Exception as e:
        print(f"‚ùå /warehouses GET hatasƒ±: {e}")
        return jsonify({"error": "Bir hata olu≈ütu"}), 500

# üîπ POST warehouses
@app.route('/warehouses', methods=['POST'])
def add_warehouse():
    try:
        data = request.get_json()
        print("üì• Gelen veri:", data)
        if not data or not data.get("name"):
            return jsonify({"error": "ƒ∞sim bo≈ü olamaz"}), 400
        conn = get_connection()
        cur = conn.cursor()
        cur.execute("INSERT INTO warehouses (name) VALUES (%s)", (data["name"],))
        conn.commit()
        conn.close()
        return jsonify({"message": "‚úÖ Ambar eklendi"}), 201
    except Exception as e:
        print(f"‚ùå /warehouses POST hatasƒ±: {e}")
        return jsonify({"error": "Ambar eklenemedi"}), 500

# üîπ Malzemeler
@app.route('/materials', methods=['GET', 'POST'])
def materials():
    if request.method == 'GET':
        return jsonify([])  # √∂rnek bo≈ü liste
    elif request.method == 'POST':
        data = request.get_json()
        print("Yeni malzeme:", data)
        return jsonify({"message": "Malzeme eklendi"}), 201

# üîπ Re√ßeteler
@app.route('/recipes', methods=['GET', 'POST'])
def recipes():
    if request.method == 'GET':
        return jsonify([])  # √∂rnek bo≈ü liste
    elif request.method == 'POST':
        data = request.get_json()
        print("Yeni re√ßete:", data)
        return jsonify({"message": "Re√ßete eklendi"}), 201

# üîπ √úretim Emirleri
@app.route('/orders', methods=['GET', 'POST'])
def orders():
    if request.method == 'GET':
        return jsonify([])  # √∂rnek bo≈ü liste
    elif request.method == 'POST':
        data = request.get_json()
        print("Yeni sipari≈ü:", data)
        return jsonify({"message": "Sipari≈ü eklendi"}), 201
